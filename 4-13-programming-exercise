/*
Summary
The number of lines that can be printed on a paper depends on:

The paper size
The point size of each character in a line
Whether lines are double-spaced or single-spaced
The top and bottom margins and the left and right margins of the paper.
Assume that all characters are of the same point size, and all lines are either single-spaced or double-spaced. Note that 1 inch = 72 points.

Moreover, assume that the lines are printed along the width of the paper. For example, if the length of the paper is 11 inches and width is 8.5 inches, then the maximum length of a line is 8.5 inches.

Instructions
Write a program that calculates the number of characters in a line and the number of lines that can be printed on a paper based on the following input from the user:

The length and width, in inches, of the paper
The left, right, top, and bottom margins
The point size of a line
An 's' or 'S' if the lines are single-spaced, or a 'd' or 'D' if the lines are double-spaced (If the lines are double-spaced, then double the point size of each character)
*/

#include <iostream>
#include <string>

using namespace std;

int main() {

    double paperLength, paperWidth;
    double topMargin, bottomMargin, leftMargin, rightMargin;
    double pointSize;
    char spacing;
    int charactersPerLine, linesPerPage, linesPerPageSingleSpaced;

    cout << "enter the length and width of the paper in inches: ";
    cin >> paperLength >> paperWidth;
    
    cout << "enter the left, right, top, and bottom margins in inches: ";
    cin >> leftMargin >> rightMargin >> topMargin >> bottomMargin;
    
    cout << "enter the point size of a line: ";
    cin >> pointSize;
    
    cout << "enter 's' for single-spaced or 'd' for double-spaced lines: ";
    cin >> spacing;


    // note that 1 inch = 72 points
    double leftMarginPoints = leftMargin * 72;
    double rightMarginPoints = rightMargin * 72;
    double topMarginPoints = topMargin * 72;
    double bottomMarginPoints = bottomMargin * 72;


    double printableWidth = paperWidth * 72 - leftMarginPoints - rightMarginPoints;
    double printableHeight = paperLength * 72 - topMarginPoints - bottomMarginPoints;
    

    charactersPerLine = static_cast<int>(printableWidth / pointSize);
    
    linesPerPageSingleSpaced = static_cast<int>(printableHeight / pointSize);
    
    // if user input double space, adjust point size
    if (spacing == 'd' or spacing == 'D') {
        pointSize *= 2;
    }
    
    linesPerPage = static_cast<int>(printableHeight / pointSize);
    

    cout << "characters per line: " << charactersPerLine << endl;
    cout << "lines per page: " << linesPerPage << endl;
    // only output the single spaced value if double spaced was chosen
    if(spacing == 'd' or spacing == 'D') {
        cout << "lines per page (if single-spaced): " << linesPerPageSingleSpaced << endl;
    }
    
    return 0;
}

