/*
The roots of the quadratic equation ax² + bx + c = 0, a ≠ 0 are given by the following formula:

-b +- sqrt(b^2 - 4ac)
______________________

          2a

Quadratic Formula
In this formula, the term b² - 4ac is called the discriminant. If b² - 4ac = 0, then the equation has a single (repeated) root. If b² - 4ac > 0, the equation has two real roots. If b² - 4ac < 0, the equation has two complex roots.

Instructions
Write a program that prompts the user to input the value of:

a (the coefficient of x²)
b (the coefficient of x)
c (the constant term)
The program then outputs the type of roots of the equation.

Furthermore, if b² - 4ac ≥ 0, the program should output the roots of the quadratic equation.

(Hint: Use the function pow from the header file cmath to calculate the square root. Chapter 3 explains how the function pow is used.)

Format your output with a decimal precision of 2.
*/

#include <iostream>
#include <cmath>
#include <iomanip>

using namespace std;

int main() {
  
    double a, b, c;
    double discriminant, root1, root2;

    cout << "enter the value of a (coefficient of x^2): ";
    cin >> a;

    cout << "enter the value of b (coefficient of x): ";
    cin >> b;

    cout << "enter the value of c (constant term): ";
    cin >> c;

    discriminant = pow(b, 2) - 4 * a * c; // discriminant = b^2 - 4ac

    cout << fixed << setprecision(2);

    if (discriminant == 0) {
        cout << "the equation has a single (repeated) root" << endl;
        root1 = -b / (2 * a);
        cout << "root: " << root1 << endl;
    }
    else if (discriminant > 0) { // if discriminant is positive
        cout << "the equation has two real roots" << endl;
        root1 = (-b + sqrt(discriminant)) / (2 * a);
        root2 = (-b - sqrt(discriminant)) / (2 * a);
        cout << "root 1 is " << root1 << endl;
        cout << "root 2 is " << root2 << endl;
    }
    else { // discriminant is negative, therefore two roots
        cout << "the equation has two complex roots" << endl;
    }

    return 0;
}
